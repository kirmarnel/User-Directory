{"version":3,"sources":["components/Header.js","components/Search.js","components/UserTable.js","utils/API.js","components/Directory.js","App.js","index.js"],"names":["Header","id","Search","props","className","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","userTable","scope","data-field","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","URL","console","log","axios","get","Directory","search","employees","sortDirections","initialSortDirections","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","input","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","API","then","res","data","results","catch","err","this","UserTable","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a88ea4bc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n    return(\n        <div id='header'>\n        <h1>Employee Directory</h1>\n        <p id='intro'>Use the search bar below to narrow your results</p>\n        </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\n\nconst Search = (props) => {\n    // Setting the component's initial state\n  \n    return (\n      <nav className=\"navbar navbar-light bg-light justify-content-center\">\n        <form className=\"form-inline m-2\" onSubmit={props.handleFormSubmit}>\n          <input\n            className=\"form-control\"\n            value={props.value}\n            name=\"search\"\n            onChange={props.handleInputChange}\n            type=\"search\"\n            placeholder=\"Search\"\n          />\n        </form>\n      </nav>\n    );\n  };\n\nexport default Search;","import React from \"react\";\n\n\nconst userTable = (props) => {\n  return (\n    <table className=\"table table-striped table-sortable text-center\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Image</th>\n          <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\n            <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\n              Name\n            </span>\n          </th>\n          <th scope=\"col\">\n            <span onClick={() => props.sortBy(\"phone\")}>Phone</span>\n          </th>\n          <th scope=\"col\">\n            <span onClick={() => props.sortBy(\"email\")}>Email</span>\n          </th>\n          <th scope=\"col\">\n            <span onClick={() => props.sortBy(\"dob\", \"date\")}>DOB</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.state.filteredEmployees.map((employee) => {\n          const { first, last } = employee.name;\n          const fullName = `${first} ${last}`;\n\n          // Format date\n          const dob = props.formatDate(employee.dob.date);\n\n          return (\n            <tr key={employee.login.uuid}>\n              <td>\n                <img src={employee.picture.thumbnail} alt={fullName} />\n              </td>\n              <td className=\"align-middle\">{fullName}</td>\n              <td className=\"align-middle\">\n              <a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\n              <td className=\"align-middle email\">\n                <a href={`mailto:${employee.email}`}>{employee.email}</a>\n              </td>\n              <td className=\"align-middle\">{dob}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default userTable;\n\n\n","import axios from \"axios\";\n\nconst URL = \"https://randomuser.me/api/?results=50&nat=us\"\n\nexport default {\n    getEmployees: function() {\n        console.log('The url is', URL)\n        return axios.get(URL);\n    }\n}\n\n","import React, { Component } from \"react\";\nimport Search from \"./Search\"\nimport UserTable from \"./UserTable\";\nimport API from \"../utils/API\";\n\nclass Directory extends Component {\n  state = {\n    search: \"\",\n    employees: [],\n    filteredEmployees: [],\n    sortDirections: this.initialSortDirections,\n  };\n\n  get initialSortDirections() {\n    return {\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      dob: \"\",\n    };\n  }\n\n  // When this component mounts, load random users as employees from https://randomuser.me/\n  componentDidMount() {\n    API.getEmployees()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results,\n          filteredEmployees: res.data.results,\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n\n  // Update search state to filter by employee name\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({ search: value });\n    this.filterEmployees(value.toLowerCase().trim());\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  // Sort with the key of specified object.\n  // If key has children, sort by primary child and optionally a secondary child. i.e. sort by last name, then first.\n  sortBy = (key, primary = 0, secondary = 0) => {\n    let sortedEmployees = this.state.filteredEmployees;\n    if (this.state.sortDirections[key]) {\n      this.setState({\n        filteredEmployees: sortedEmployees.reverse(),\n        sortDirections: {\n          ...this.initialSortDirections,\n          [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\n        },\n      });\n    } else {\n      sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\n        a = a[key];\n        b = b[key];\n\n        // If secondary comparison given and primary comparison is equal\n        // Example: Sorting by last name, if last names are equal, then sort that instance by first name instead.\n        if (primary) {\n          if (secondary && a[primary] === b[primary]) {\n            return a[secondary].localeCompare(b[secondary]);\n          }\n          return a[primary].localeCompare(b[primary]);\n        } else {\n          return a.localeCompare(b);\n        }\n      });\n\n      this.setState({\n        filteredEmployees: sortedEmployees,\n        sortDirections: {\n          ...this.initialSortDirections,\n          [key]: \"asc\",\n        },\n      });\n    }\n  };\n\n  filterEmployees = (input) => {\n    if (input) {\n      this.setState({\n        filteredEmployees: this.state.employees.filter((employee) => {\n          return (\n            employee.name.first\n              .toLowerCase()\n              .concat(\" \", employee.name.last.toLowerCase())\n              .includes(input) ||\n            employee.phone.includes(input) ||\n            employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) ||\n            employee.email.includes(input) ||\n            this.formatDate(employee.dob.date).includes(input)\n          );\n        }),\n      });\n    } else {\n      this.setState({ filteredEmployees: this.state.employees });\n    }\n  };\n\n  formatDate = (date) => {\n    date = new Date(date);\n    let dob = [];\n    dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n    dob.push((\"0\" + date.getDate()).slice(-2));\n    dob.push(date.getFullYear());\n\n    // Join formatted date\n    return dob.join(\"-\");\n  };\n\n  render() {\n    return (\n      <>\n        <Search\n          value={this.state.search}\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n        <div className=\"container mt-4\">\n          <UserTable\n            state={this.state}\n            sortBy={this.sortBy}\n            filterEmployees={this.filterEmployees}\n            formatDate={this.formatDate}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Directory;","import React from \"react\";\nimport Header from \"./components/Header\"\nimport Directory from \"./components/Directory\"\n\n\nfunction App() {\n  return(\n    <>\n    <Header/>\n    <Directory/>\n    </>\n  )\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}